application.env = engine2.dev
application.port = 8888

modules.m1.dfs.non_redundant = [
  "ServiceModule",
  "LoggingJacksonModule",
  "org.opensearch.graph.dispatcher.modules.CoreDispatcherModule",
  "org.opensearch.graph.dispatcher.query.graphql.GraphQLModule",
"org.opensearch.graph.dispatcher.query.rdf.SparqlModule",
"org.opensearch.graph.dispatcher.query.sql.SqlModule",
  "org.opensearch.graph.dispatcher.modules.DescriptorsModule",
  "org.opensearch.graph.dispatcher.modules.DefaultIdGenModule",
  "org.opensearch.graph.asg.translator.graphql.AsgGraphQLModule",
  "org.opensearch.graph.asg.translator.cypher.AsgCypherModule",
  "org.opensearch.graph.asg.translator.sparql.AsgSparqlModule",
  "org.opensearch.graph.asg.M2AsgModule",
  "org.opensearch.graph.asg.AsgValidationModule",
  "org.opensearch.graph.epb.plan.modules.EpbDfsNonRedundantModule",
  "org.opensearch.graph.gta.module.GtaFilterModule",
  "org.opensearch.graph.executor.ExecutorModule",
  "org.opensearch.graph.executor.modules.promise.CursorsModule"
]

modules.m1.dfs.redundant = [
  "ServiceModule",
  "LoggingJacksonModule",
  "org.opensearch.graph.dispatcher.modules.CoreDispatcherModule",
  "org.opensearch.graph.dispatcher.query.graphql.GraphQLModule",
"org.opensearch.graph.dispatcher.query.rdf.SparqlModule",
"org.opensearch.graph.dispatcher.query.sql.SqlModule",
  "org.opensearch.graph.dispatcher.modules.DescriptorsModule",
  "org.opensearch.graph.dispatcher.modules.DefaultIdGenModule",
  "org.opensearch.graph.asg.translator.graphql.AsgGraphQLModule",
  "org.opensearch.graph.asg.translator.cypher.AsgCypherModule",
  "org.opensearch.graph.asg.translator.sparql.AsgSparqlModule",
  "org.opensearch.graph.asg.M2AsgModule",
  "org.opensearch.graph.asg.AsgValidationModule",
  "org.opensearch.graph.epb.plan.modules.EpbDfsRedundantModule",
  "org.opensearch.graph.gta.module.GtaModule",
  "org.opensearch.graph.executor.ExecutorModule",
  "org.opensearch.graph.executor.modules.promise.CursorsModule"
]

modules.m1.smartEpb = [
  "ServiceModule",
  "LoggingJacksonModule",
  "org.opensearch.graph.dispatcher.modules.CoreDispatcherModule",
  "org.opensearch.graph.dispatcher.query.graphql.GraphQLModule",
"org.opensearch.graph.dispatcher.query.rdf.SparqlModule",
"org.opensearch.graph.dispatcher.query.sql.SqlModule",
  "org.opensearch.graph.dispatcher.modules.DescriptorsModule",
  "org.opensearch.graph.dispatcher.modules.DefaultIdGenModule",
  "org.opensearch.graph.asg.translator.graphql.AsgGraphQLModule",
  "org.opensearch.graph.asg.translator.cypher.AsgCypherModule",
  "org.opensearch.graph.asg.translator.sparql.AsgSparqlModule",
  "org.opensearch.graph.asg.M2AsgModule",
  "org.opensearch.graph.asg.AsgValidationModule",
  "org.opensearch.graph.epb.plan.modules.EpbModule",
  "org.opensearch.graph.gta.module.GtaModule",
  "org.opensearch.graph.executor.ExecutorModule",
  "org.opensearch.graph.executor.modules.promise.CursorsModule"
]

epb.cost.alpha = 1
epb.cost.delta = 0.001

opensearch.hosts = [ localhost ]
opensearch.port = 9300
opensearch.cluster_name = fuse.test_elastic
opensearch.default_search_size = 5000
opensearch.max_search_size = 10000
opensearch.scroll_size = 1000
opensearch.scroll_time = 60000

unipop.bulk.max = 100
unipop.bulk.start = 100
unipop.bulk.multiplier = 1

assembly = fuse
fuse.physical_raw_schema = TestRawSchema
fuse.physical_schema_data_loader = InitialTestDataLoader
fuse.physical_schema_csv_data_loader = InitialTestDataLoader

fuse.physical_schema_provider_factory_class = TestSchemaProviderFactory
fuse.search_order_provider= org.opensearch.graph.unipop.controller.search.DefaultSearchOrderProvider
fuse.asg_strategy_registrar = org.opensearch.graph.asg.strategy.M2AsgStrategyRegistrar
fuse.unigraph_provider = org.opensearch.graph.executor.ontology.promise.M1ElasticUniGraphProvider
opengraph.plan_traversal_translator_class = org.opensearch.graph.gta.translation.promise.M1PlanTraversalTranslator
fuse.ontology_provider = org.opensearch.graph.dispatcher.ontology.SimpleOntologyProvider

opensearch.stat.hosts = [ localhost ]
opensearch.stat.port = 9300
opensearch.stat.cluster.name = fuse.test_elastic
opensearch.stat.index.name = stat
opensearch.stat.type.numeric.name = bucketNumeric
opensearch.stat.type.string.name = bucketString
opensearch.stat.type.term.name = bucketTerm

opensearch.stat.type.global.name = bucketGlobal
opensearch.stat.configuration.file = stats_fields_test.json
opensearch.stat.cardinality.field = cardinality
opensearch.stat.count.field = count

swagger {
  info {
    title: Fuse API
    version: v1
  }
  schemes: ["http"]
}




