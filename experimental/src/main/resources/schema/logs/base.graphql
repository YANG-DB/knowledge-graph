scalar Json
scalar Long
scalar URL

enum StreamType {
    logs
    metrics
    traces
    synthetics
}

type BaseRecord {
    #'Date/time when the event originated.
    #
    #        This is the date/time extracted from the event, typically representing when
    #        the event was generated by the source.
    #
    #        If the event source has no original timestamp, this value is typically populated
    #        by the first time the event was received by the pipeline.
    #
    #        Required field for all events.'
    timestamp : Time!
    #'Custom key/value pairs.
    #
    #        Can be used to add meta information to events. Should not contain nested objects.
    #        All values are stored as keyword.
    #
    #        Example: '{"application": "foo-bar", "env": "production"}'
    labels : Json
    # 'For log events the message field contains the log message, optimized
    #        for viewing in a log viewer.
    #
    #        For structured logs without an original message field, other fields can be
    #        concatenated to form a human-readable summary of the event.
    #
    #        If multiple messages exist, they can be combined into one message.'
    message: String
    # List of keywords used to tag each event.
    tags: [String]
}

type StreamSet {
    #An overarching type for the data stream.
    streamType: StreamType
    #    A user defined namespace. Namespaces are useful to allow grouping of data.
    #
    # Many users already organize their indices this way, and the data stream naming scheme now provides this best practice as a default. Many users will populate this field with default.
    #    If no value is used, it falls back to default.
    namespace:String
    #    The field can contain anything that makes sense to signify the source of the data.
    # Examples include nginx.access, prometheus, endpoint etc. For data streams that otherwise fit, but that do not have dataset set we use the value "generic" for the dataset value.
    #    event.dataset should have the same value as data_stream.dataset.
    dataset:String
}