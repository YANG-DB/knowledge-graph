application.env = engine2.m1.dev
application.port = 8888

modules.m1.dfs.redundant = [
  "org.opensearch.graph.dispatcher.modules.CoreDispatcherModule",
  "org.opensearch.graph.asg.AsgModule",
  "org.opensearch.graph.epb.plan.modules.EpbDfsRedundantModule",
  "org.opensearch.graph.gta.module.GtaModule",
  "org.opensearch.graph.executor.ExecutorModule"
]

opensearch.hosts = [ localhost ]
opensearch.port = 9300
opensearch.cluster_name = opengraph.test
opensearch.default_search_size = 5000
opensearch.max_search_size = 10000
opensearch.scroll_size = 1000
opensearch.scroll_time = 60000

unipop.bulk.max = 100
unipop.bulk.start = 100
unipop.bulk.multiplier = 1

opengraph.physical_index_provider_factory_class = com.yangdb.test.data.DragonsOntologyPhysicalIndexProviderFactory
opengraph.graph_layout_provider_factory_class = DragonsOntologyGraphLayoutProviderFactory


#A list of hostnames for of the nodes in the statistics cluster
opensearch.stat.hosts = [ localhost ]
#The transport port for the statistics cluster
opensearch.stat.port = 9300
#The name of the statistics cluster
opensearch.stat.cluster.name = opengraph.test
#This Elastic Index Name
opensearch.stat.index.name = stat
#This Elastic Type will be used to save statistics for numeric values
opensearch.stat.type.numeric.name = bucketNumeric
#This Elastic Type will be used to save statistics for string values
opensearch.stat.type.string.name = bucketString
#This Elastic Type will be used to save statistics for enum/term values
opensearch.stat.type.term.name = bucketTerm
#Relative path
opensearch.stat.configuration.file = stats_fields_test.json
#The name of the cardinality field in stat
opensearch.stat.cardinality.field = cardinality
#The name of the count field in stat
opensearch.stat.count.field = count






